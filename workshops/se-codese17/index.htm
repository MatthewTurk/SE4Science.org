<head>
	<meta name="author" content="Jeffrey Carver" />
	<meta http-equiv="content-type" content="text/html;charset=iso-8859-2" />
	<link rel="stylesheet" href="../images/conf-style.css" type="text/css" />
	<title>SE-CoDeSE 2017</title>
    	
	<style type="text/css">
.style1 {
	text-align: right;
}
</style>
    	
	</head>
<body>
	<div class="content">
		<div class="header_top"></div>
		<div class="header">
			<div class="header_text">
<div class="header_text">
<div class="style1">
				&nbsp;In Cooperation: <img src="sighpc_logo.jpg" height="25" style="float: right"> 
				</div>
<h1>2017 International Workshop on Software Engineering for 
  High Performance Computing in Computational and Data-Enabled Science and Engineering</h1>
				<h2>November 12, 2017</h2>
				<h2>Held in Conjunction with 
				<a href="http://sc17.supercomputing.org/">SC17</a><br><br>
					<h2>Part of the <a href="http://www.SE4Science.org/">Software Engineering for Science</a> Workshop Series</h2><br><br>
				<h2>Home&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				<font color="yellow"><a href="cfp.htm">Call for Papers</a></font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
				<font color="yellow"><a href="committee.htm">Committee</a></font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        		<a href="schedule.htm"><font color="yellow">Schedule</font></a>
				</div>
		</div>
		<div class="left">
		<div class="article">
<b>Deadline Extended to August 20 AOE</b>	<br><br>	
<b>NEWS: Travel Grants Available - contact Jeff Carver (carver@cs.ua.edu) </b>
<h2 align="center"><u>Overview</u></h2><br>

This workshop is concerned with identifying and applying appropriate software engineering (SE) tools and practices 
(e.g., code generators, static analyzers, validation + verification (V&V) practices, testing, design approaches, and maintenance practices) 
to support and ease the development of reproducible Computational and Data-enabled Science & Engineering (CoDeSE) software for 
High Performance Computing (HPC). Specifically:
<ul>
	<li>CoDeSE applications that include large parallel models/simulations of the physical world running on HPC systems.</li>
	<li>CoDeSE applications that utilize HPC systems (e.g., GPUs computing, compute clusters, or supercomputers) to manage and/or manipulate large amounts of data.</li>
</ul>

Despite the increasing demand for utilizing HPC for CoDeSE applications, software development for HPC historically attracted little attention from the SE community. 
Paradoxically, the HPC CoDeSE community has increasingly been adopting SE techniques and tools. Indeed, the development of CoDeSE software for HPC differs significantly 
from the development of more traditional business information systems, from which many SE best practices and tools have been drawn. These differences appear at various 
phases of the software lifecycle as described below:
<ul>
	<li>Requirements:</li>
	<ul>
		<li>Risks due to the exploration of relatively unknown scientific/engineering phenomena;</li>
		<li>Supporting reproducible science, particularly on non-deterministic systems;</li>
		<li>Constant change as new information is gathered;</li>

	</ul>
	<li>Design</li>
	<ul>
		<li>Data dependencies within the software;</li>
		<li>The need to identify the most appropriate parallelization strategy for CoDeSE algorithms;</li> 
		<li>The presence of complex communication among HPC nodes that could degrade performance;</li>
		<li>Challenges in designing unit and system tests at appropriate scales;</li>
		<li>The need for fault tolerance and task migration mechanisms to mitigate the need to restart time-consuming computations due to software or hardware errors;</li>
	</ul>
	<li>V&V
	<ul>
		<li>Results are often unknown when exploring novel science or engineering areas, algorithms, and datasets;</li>
		<li>Challenges in applying unit and system tests at appropriate scales;</li>
		<li>Challenges in retrospectively designing and implementing tests for legacy code;</li>
		<li>Popular tools often do not work on the latest HPC architectures; they need to be tuned to handle many threads executing at the same time.</li>
	</ul>
	<li>Deployment</li>
	<ul>
		<li>Failure of components within running systems is expected due to system size;</li>
		<li>Continuous integration on platforms with high available and infrequent downtimes;</li>
		<li>Long system lifespans necessitate porting across multiple platforms</li>
	</ul>
</ul>

Therefore, in order to identify and develop appropriate tools and practices to support HPC CoDeSE software, members of the SE community, the CoDeSE community and the HPC community must interact with each other. This workshop aims to provide a platform to facilitate this interaction by encourage paper submission and workshop participation by people from all three communities. In addition to presentation and discussion of the accepted papers, significant time during the workshop will be devoted to large and small group discussions among the participants to identify important research questions at the intersection of SE and HPC CoDeSE that are in need of additional study.
<br><br>

Previous editions of this workshop have focused discussion around a number of interesting topics, including: bit-by-bit vs. scientific validation, reproducibility, unique characteristics of CoDeSE software that affect software development choices, major software quality goals for CoDeSE software, crossing the communication chasm between SE and CoDeSE, measuring the impact of SE on scientific productivity, SE tools and methods needed by the CoDeSE community, and how to effectively test CoDeSE software. 
<br><br>

Motivated by the discussion during the 2015 and 2016 workshops, in this edition of the workshop, we expand the previous workshops by continuing and extending two special focus areas, and emphasizing data-enabled science and engineering as a partner of computational science and engineering, turning CSE into CoDeSE. First, we will place special emphasis on experience reports (including positive, negative, and neutral) of applying software engineering practices to the development of HPC scientific software. It is important to document those successes and failures for the community. Second, as quality assurance is a challenge in the scientific HPC domain, which was specifically discussed in 2016, we will also recruit papers describing quality assurance techniques for HPC science and their use in practice focussing specifically on the challenges of unit testing, system testing, and continuous integration for HPC codes, addressing both legacy code and testing at scale on different architectures and platforms.
<br><br>

For more information contact <a href="mailto:carver@cs.ua.edu">Jeffrey Carver</a>.
<hr>
<i>Last Updated on May 23, 2017 by Jeffrey Carver</i>

		</div>
		</div>	
		<div class="header_bottom"></div>
		<div class="footer">
			<p><h2><a href="http://www.SE4Science.org/">Software Engineering for Science</a></h2></p>
	  </div>
	</div>
</body>
</html>
